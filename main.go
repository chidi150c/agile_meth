package main

import (
	// "ai_agents/agile_meth/ai_model/assistants"
	"ai_agents/agile_meth/ai_model/ollama"
	"ai_agents/agile_meth/config"
	"ai_agents/agile_meth/planning"
	"fmt"
)

func main() {
	c := config.NewModelConfigs()["gpt4"]
	
	// devon := assistants.NewOpenAI(c.ApiKey, c.AssistUrl, c.ThreadUrl, c.Model)
	// devon.AssistantID = "asst_z8IngMVMU8VYsZy0wQMGKpvy"
	// devon.ThreadID =  "thread_jqs0TJXMWh6WMhWCVg8CwVw6"
	// devon.BaseUrl = c.ThreadUrl+"/"+devon.ThreadID
	// scron :=  assistants.NewOpenAI(c.ApiKey, c.AssistUrl, c.ThreadUrl, c.Model)
	// scron.AssistantID = "asst_5ooQZzG1kK3iUGm31497NwD9"
	// scron.ThreadID = "thread_usJZp4ZCTUobrugdfuNHEXpQ"
	// scron.BaseUrl = c.ThreadUrl+"/"+scron.ThreadID
	// queon := assistants.NewOpenAI(c.ApiKey, c.AssistUrl, c.ThreadUrl, c.Model)
	// queon.AssistantID = "asst_GXNmbJSZeyNyuQOs4qQalKpg"
	// queon.ThreadID = "thread_QJCfWlgio8W6MmOthPDBordU" 
	// queon.BaseUrl = c.ThreadUrl+"/"+queon.ThreadID
	// anson :=assistants.NewOpenAI(c.ApiKey, c.AssistUrl, c.ThreadUrl, c.Model)               
	// anson.AssistantID = "asst_QwDbwcjFIPCQe8rn9pBHzBWo"
	// anson.ThreadID = "thread_k2qBNFmv84NkqmfjiDgQ8Sns"
	// anson.BaseUrl = c.ThreadUrl+"/"+anson.ThreadID

	// _, err := on.CreateAssistant(planning.Prompt3, "AnsAgent", "")
	// if err != nil { 
	// 	log.Fatalln(err)
	// }
	// _, err = on.CreateThread()
	// if err != nil {
	// 	log.Fatalln(err)
	// }
	// sm := planning.NewAgileProject("ScrumMaster", devon, scron,  queon, anson)


	// Create instances of team members
	// Developer_John := development.NewDeveloper("John", on)

	c = config.NewModelConfigs()["ollama"]
    devon := ollama.NewOllama(c.AssistUrl, c.Model)
    scron := ollama.NewOllama(c.AssistUrl, c.Model)
    queon := ollama.NewOllama(c.AssistUrl, c.Model)
    anson := ollama.NewOllama(c.AssistUrl, c.Model)
	devon.SystemMessage = planning.CodePrompt
	scron.SystemMessage = planning.ScrumPrompt
	queon.SystemMessage = planning.QuestionPrompt
	anson.SystemMessage = planning.AnswersPrompt
	sm := planning.NewAgileProject("ScrumMaster", devon, scron, queon, anson)

    vision := `Vision: Build a world wide game that millions around the world could play in the virtual environment generated by AI
	// Adopt Agile methodology and step by step code by code session by session implement the game using agile methodology.`
	// vision := `Implement a VectorDB for my generative AI application`
    questions := sm.QuestionsForVisionClarification(vision)
	vi := ""
    for k, v := range questions{
        fmt.Printf("\nQuestion %d: %s\nGoal %d: %s ", k+1, v.Question, k+1, v.Goal)
		v.Answer = sm.AnswerQuestionForVisionClarity(v.Question)
		fmt.Printf("\nAnswer %d: %s\n", k+1, v.Answer)
		vi = fmt.Sprintf("Question %d: %s\nAnswer : %s", k+1,v.Question, v.Answer)

    }
	vision = fmt.Sprintf("%s\n%s", vision, vi)
    goals := sm.BreakDownVision(vision)
    fmt.Printf("Vision: %s \n\n", sm.Vision)
    for k, v := range goals{
        fmt.Printf("Goal%d: %s: %s \n", k+1, v.Goal, v.Reason)
    }

	// tester.WorkOn(userStory)
	// designer.WorkOn(userStory)
}
